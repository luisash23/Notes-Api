(()=>{"use strict";var n={56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],s=0;s<n.length;s++){var d=n[s],c=o.base?d[0]+o.base:d[0],l=r[c]||0,p="".concat(c," ").concat(l);r[c]=l+1;var u=t(p),h={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(h);else{var m=a(h,o);o.byIndex=s,e.splice(s,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var s=t(r[i]);e[s].references--}for(var d=o(n,a),c=0;c<r.length;c++){var l=t(r[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=d}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},601:n=>{n.exports=function(n){return n[1]}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},919:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(601),a=t.n(o),r=t(314),i=t.n(r)()(a());i.push([n.id,"body {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 0 16px;\n}\n\n#notesContainer {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 16px;\n    margin-top: 24px;\n}",""]);const s=i}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o=t(72),a=t.n(o),r=t(825),i=t.n(r),s=t(659),d=t.n(s),c=t(56),l=t.n(c),p=t(540),u=t.n(p),h=t(113),m=t.n(h),b=t(919),f={};f.styleTagTransform=m(),f.setAttributes=l(),f.insert=d().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=u(),a()(b.A,f),b.A&&b.A.locals&&b.A.locals;class g extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot.innerHTML='\n        <style>\n          .app-bar {\n            background-color: #2196f3;\n            padding: 16px;\n            color: white;\n            margin-bottom: 24px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n          }\n          h1 {\n            margin: 0;\n            font-size: 24px;\n          }\n        </style>\n        <div class="app-bar">\n          <h1>Notes App</h1>\n        </div>\n      '}}customElements.define("app-bar",g);class y extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot.innerHTML='\n        <style>\n          .note-input {\n            background-color: white;\n            padding: 16px;\n            border-radius: 8px;\n            margin-bottom: 24px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n          }\n          input, textarea {\n            width: 100%;\n            padding: 8px;\n            margin-bottom: 12px;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            box-sizing: border-box;\n          }\n          textarea {\n            height: 100px;\n            resize: vertical;\n          }\n          button {\n            background-color: #2196f3;\n            color: white;\n            border: none;\n            padding: 8px 16px;\n            border-radius: 4px;\n            cursor: pointer;\n          }\n          button:hover {\n            background-color: #1976d2;\n          }\n          button:disabled {\n            background-color: #b0bec5;\n            cursor: not-allowed;\n          }\n          .loading {\n            display: inline-block;\n            width: 20px;\n            height: 20px;\n            border: 3px solid rgba(255,255,255,.3);\n            border-radius: 50%;\n            border-top-color: white;\n            animation: spin 1s ease-in-out infinite;\n            margin-left: 8px;\n            vertical-align: middle;\n          }\n          @keyframes spin {\n            to { transform: rotate(360deg); }\n          }\n        </style>\n        <div class="note-input">\n          <input type="text" id="title" placeholder="Judul catatan">\n          <textarea id="body" placeholder="Isi catatan"></textarea>\n          <button id="submit">Tambah Catatan</button>\n          <span id="submitLoader" class="loading" style="display:none;"></span>\n        </div>\n      ',this.shadowRoot.querySelector("#submit").addEventListener("click",this.handleSubmit.bind(this))}async handleSubmit(){const n=this.shadowRoot.querySelector("#title").value,e=this.shadowRoot.querySelector("#body").value;if(n&&e){const t={title:n,body:e},o=this.shadowRoot.querySelector("#submit"),a=this.shadowRoot.querySelector("#submitLoader");o.disabled=!0,a.style.display="inline-block";try{await fetch("https://notes-api.dicoding.dev/v2/notes",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),this.shadowRoot.querySelector("#title").value="",this.shadowRoot.querySelector("#body").value="",document.dispatchEvent(new CustomEvent("notes-changed"))}catch(n){console.error("Gagal menambahkan catatan:",n),alert("Gagal menambahkan catatan. Silakan coba lagi.")}finally{o.disabled=!1,a.style.display="none"}}else alert("Judul dan isi catatan tidak boleh kosong!")}}customElements.define("note-input",y);class v extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}set note(n){this._note=n,this.render()}render(){this.shadowRoot.innerHTML=`\n        <style>\n          .note-item {\n            background-color: white;\n            border-radius: 8px;\n            padding: 16px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            transition: transform 0.2s;\n          }\n          .note-item:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 5px 10px rgba(0,0,0,0.15);\n          }\n          h3 {\n            margin-top: 0;\n            color: #333;\n          }\n          p {\n            color: #666;\n          }\n          .date {\n            font-size: 12px;\n            color: #888;\n            margin-bottom: 12px;\n          }\n          button {\n            background-color: #f44336;\n            color: white;\n            border: none;\n            padding: 6px 12px;\n            border-radius: 4px;\n            cursor: pointer;\n          }\n          button:hover {\n            background-color: #d32f2f;\n          }\n          button:disabled {\n            background-color: #ffcdd2;\n            cursor: not-allowed;\n          }\n          .loading {\n            display: inline-block;\n            width: 12px;\n            height: 12px;\n            border: 2px solid rgba(255,255,255,.3);\n            border-radius: 50%;\n            border-top-color: white;\n            animation: spin 1s ease-in-out infinite;\n            margin-left: 4px;\n            vertical-align: middle;\n          }\n          @keyframes spin {\n            to { transform: rotate(360deg); }\n          }\n        </style>\n        <div class="note-item">\n          <h3>${this._note.title}</h3>\n          <p>${this._note.body}</p>\n          <p class="date">${new Date(this._note.createdAt).toLocaleDateString("id-ID",{weekday:"long",year:"numeric",month:"long",day:"numeric"})}</p>\n          <button id="delete">Hapus</button>\n          <span id="deleteLoader" class="loading" style="display:none;"></span>\n        </div>\n      `,this.shadowRoot.querySelector("#delete").addEventListener("click",(async()=>{const n=this.shadowRoot.querySelector("#delete"),e=this.shadowRoot.querySelector("#deleteLoader");n.disabled=!0,e.style.display="inline-block";try{await fetch(`https://notes-api.dicoding.dev/v2/notes/${this._note.id}`,{method:"DELETE"}),document.dispatchEvent(new CustomEvent("notes-changed"))}catch(t){console.error("Gagal menghapus catatan:",t),alert("Gagal menghapus catatan. Silakan coba lagi."),n.disabled=!1,e.style.display="none"}}))}}customElements.define("note-item",v);class x extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(n=!1){this.shadowRoot.innerHTML=`\n        <style>\n          .loading-container {\n            display: ${n?"flex":"none"};\n            justify-content: center;\n            padding: 20px;\n          }\n          .spinner {\n            width: 40px;\n            height: 40px;\n            border: 4px solid rgba(33, 150, 243, 0.3);\n            border-radius: 50%;\n            border-top-color: #2196f3;\n            animation: spin 1s linear infinite;\n          }\n          @keyframes spin {\n            to { transform: rotate(360deg); }\n          }\n        </style>\n        <div class="loading-container">\n          <div class="spinner"></div>\n        </div>\n      `}show(){this.render(!0)}hide(){this.render(!1)}}customElements.define("loading-indicator",x);const w="https://notes-api.dicoding.dev/v2",k={async getAllNotes(){try{const n=await fetch(`${w}/notes`),e=await n.json();return"success"!==e.status?{error:!0,data:[]}:{error:!1,data:e.data}}catch(n){return console.error("Error fetching notes:",n),{error:!0,data:[]}}},async addNote(n){try{const e=await fetch(`${w}/notes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});return"success"!==(await e.json()).status?{error:!0}:{error:!1}}catch(n){return console.error("Error adding note:",n),{error:!0}}},async deleteNote(n){try{const e=await fetch(`${w}/notes/${n}`,{method:"DELETE"});return"success"!==(await e.json()).status?{error:!0}:{error:!1}}catch(n){return console.error("Error deleting note:",n),{error:!0}}}},E={init(){this.mainLoader=document.getElementById("mainLoader"),this.notesContainer=document.getElementById("notesContainer"),this.renderNotes(),document.addEventListener("notes-changed",(()=>{this.renderNotes()}))},async renderNotes(){this.mainLoader.show(),this.notesContainer.innerHTML="";try{const{error:n,data:e}=await k.getAllNotes();if(n)return void(this.notesContainer.innerHTML="<p>Gagal memuat data. Silakan coba lagi.</p>");if(0===e.length)return void(this.notesContainer.innerHTML="<p>Tidak ada catatan. Silakan tambahkan catatan baru.</p>");e.forEach((n=>{const e=document.createElement("note-item");e.note=n,this.notesContainer.appendChild(e)}))}catch(n){console.error("Error rendering notes:",n),this.notesContainer.innerHTML="<p>Terjadi kesalahan. Silakan muat ulang halaman.</p>"}finally{this.mainLoader.hide()}}};document.addEventListener("DOMContentLoaded",(()=>{E.init()}))})();